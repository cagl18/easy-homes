{"version":3,"sources":["js/layout/account/card/card.js","js/layout/account/notificationSettings.js"],"names":["accountCard","children","title","className","notificationSettings","state","user","props","auth","name","firstname","lastname","email","showSpinner","onChangedHandler","e","target","fieldName","value","updateState","setState","onSubmitHandler","preventDefault","updateUserProfile","style","lineHeight","marginBottom","marginTop","color","fontSize","cardBody","this","onSubmit","htmlFor","disabled","type","onChange","loading","spinnerOnSubmit","isFetching","Component","connect","dispatch"],"mappings":"gIAceA,IAZK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OACE,0BAASC,UAAU,gBAAnB,UACE,qBAAIA,UAAU,qBAAd,UACGD,EACD,qBAAKC,UAAU,uBAEjB,qBAAKA,UAAU,sBAAf,SAAsCF,S,uICHtCG,E,4MACJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,KAAKF,MAAQ,CAC5BG,KAAM,GACNC,UAAW,GACXC,SAAU,GACVC,MAAO,IAETC,aAAa,G,EAGfC,iBAAmB,SAACC,GAAO,IAAD,EACWA,EAAEC,OAAvBC,EADU,EAChBR,KAAiBS,EADD,EACCA,MACnBC,EAAW,2BAAQ,EAAKd,MAAMC,MAAnB,kBAA0BW,EAAYC,IAEvD,EAAKE,SAAS,CACZd,KAAMa,K,EAGVE,gBAAkB,SAACN,GACjBA,EAAEO,iBACF,EAAKf,MAAMgB,kBAAkB,EAAKlB,MAAMC,O,uDAEhC,IAAD,EACDJ,EACJ,sBACEsB,MAAO,CAAEC,WAAY,OAAQC,aAAc,MAAOC,UAAW,SAD/D,UAGE,mBACExB,UAAU,qBACVqB,MAAO,CAAEI,MAAO,MAAOC,SAAU,UAFnC,gDAHF,wCAYIC,EAAYC,KAAK1B,MAAMC,KAG3B,uBAAMH,UAAU,OAAO6B,SAAUD,KAAKV,gBAAtC,UACE,sGAGA,qBAAKlB,UAAU,aAAf,SACE,wBAAO8B,QAAQ,kBAAf,UACE,uBACEC,UAAQ,EACRC,KAAK,QACL1B,KAAK,cAEL2B,SAAUL,KAAKjB,mBAEjB,oDAGJ,qBAAKX,UAAU,aAAf,SACE,wBAAO8B,QAAQ,kBAAf,UACE,uBACEC,UAAQ,EACRC,KAAK,QACL1B,KAAK,QACL2B,SAAUL,KAAKjB,mBAEjB,8CAGJ,qBAAKX,UAAU,aAAf,SACE,wBAAO8B,QAAQ,kBAAf,UACE,uBACEC,UAAQ,EACRC,KAAK,QACL1B,KAAK,QACL2B,SAAUL,KAAKjB,mBAEjB,8CAIJ,cAAC,IAAD,CACEoB,UAAQ,EACR/B,UAAU,iBACVkC,QAASN,KAAK1B,MAAMiC,kBAAX,UAA8BP,KAAKxB,MAAMC,YAAzC,aAA8B,EAAiB+B,YAH1D,qBA1Ca,oCAqDjB,OACE,qBAAKpC,UAAU,wBAAf,SACE,cAAC,IAAD,CAAaD,MAAOA,EAApB,SAA4B4B,U,GA5FDU,aA8GpBC,uBAZS,SAACpC,GACvB,MAAO,CACLG,KAAMH,EAAMG,SAIW,SAACkC,GAC1B,MAAO,CACLnB,kBAAmB,SAACjB,GAAD,OAAUoC,EAASnB,4BAAkBjB,QAI7CmC,CAGbrC","file":"static/js/6.5b96da68.chunk.js","sourcesContent":["import React from 'react';\n\nconst accountCard = ({ children, title }) => {\n  return (\n    <section className=\"account__card\">\n      <h4 className=\"heading-quaternary\">\n        {title}\n        <div className=\"heading-divider\"></div>\n      </h4>\n      <div className=\"account__card--body\">{children}</div>\n    </section>\n  );\n};\n\nexport default accountCard;\n","import React, { Component } from 'react';\nimport AccountCard from './card/card';\nimport Button from '../../components/UI/button';\nimport { connect } from 'react-redux';\nimport { updateUserProfile } from '../../../store/actions';\n\nclass notificationSettings extends Component {\n  state = {\n    user: this.props.auth.user || {\n      name: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n    },\n    showSpinner: false,\n  };\n\n  onChangedHandler = (e) => {\n    const { name: fieldName, value } = e.target;\n    const updateState = { ...this.state.user, [fieldName]: value };\n\n    this.setState({\n      user: updateState,\n    });\n  };\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n    this.props.updateUserProfile(this.state.user);\n  };\n  render() {\n    const title = (\n      <div\n        style={{ lineHeight: '25px', marginBottom: '8px', marginTop: '-17px' }}\n      >\n        <p\n          className=\"u-margin-top-small\"\n          style={{ color: 'red', fontSize: '1.5rem' }}\n        >\n          This functionality is coming soon!\n        </p>\n        Default Saved Search Notifications\n      </div>\n    );\n    const cardBody = !this.state.user ? (\n      `failed to fetch user profile. :-(`\n    ) : (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <p>\n          How often would you like to receive updates on future Saved Searches?\n        </p>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"currentPassword\">\n            <input\n              disabled\n              type=\"radio\"\n              name=\"Immediately\"\n              // value={this.state.user?.firstname}\n              onChange={this.onChangedHandler}\n            />\n            <span>Immediately</span>\n          </label>\n        </div>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"currentPassword\">\n            <input\n              disabled\n              type=\"radio\"\n              name=\"Daily\"\n              onChange={this.onChangedHandler}\n            />\n            <span>Daily</span>\n          </label>\n        </div>\n        <div className=\"inputGroup\">\n          <label htmlFor=\"currentPassword\">\n            <input\n              disabled\n              type=\"radio\"\n              name=\"never\"\n              onChange={this.onChangedHandler}\n            />\n            <span>Never</span>\n          </label>\n        </div>\n\n        <Button\n          disabled\n          className=\"default btn-sm\"\n          loading={this.state.spinnerOnSubmit && this.props.auth?.isFetching}\n          // disabled={true}\n        >\n          save\n        </Button>\n      </form>\n    );\n\n    return (\n      <div className=\"account__notification\">\n        <AccountCard title={title}>{cardBody}</AccountCard>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserProfile: (user) => dispatch(updateUserProfile(user)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(notificationSettings);\n"],"sourceRoot":""}