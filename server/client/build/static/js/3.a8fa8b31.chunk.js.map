{"version":3,"sources":["js/layout/account/card/card.js","js/layout/account/accountProfile.js"],"names":["accountCard","children","title","className","AccountProfile","state","user","props","auth","name","firstname","lastname","email","showSpinner","onChangedHandler","e","target","fieldName","value","updateState","setState","onSubmitHandler","preventDefault","updateUserProfile","cardBody","this","onSubmit","type","placeholder","onChange","disabled","loading","spinnerOnSubmit","isFetching","Component","connect","dispatch"],"mappings":"gIAceA,IAZK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OACE,0BAASC,UAAU,gBAAnB,UACE,qBAAIA,UAAU,qBAAd,UACGD,EACD,qBAAKC,UAAU,uBAEjB,qBAAKA,UAAU,sBAAf,SAAsCF,S,uICHtCG,E,4MACJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,KAAKF,MAAQ,CAC5BG,KAAM,GACNC,UAAW,GACXC,SAAU,GACVC,MAAO,IAETC,aAAa,G,EAGfC,iBAAmB,SAACC,GAAO,IAAD,EACWA,EAAEC,OAAvBC,EADU,EAChBR,KAAiBS,EADD,EACCA,MACnBC,EAAW,2BAAQ,EAAKd,MAAMC,MAAnB,kBAA0BW,EAAYC,IAEvD,EAAKE,SAAS,CACZd,KAAMa,K,EAGVE,gBAAkB,SAACN,GACjBA,EAAEO,iBACF,EAAKf,MAAMgB,kBAAkB,EAAKlB,MAAMC,O,uDAEhC,IAAD,QACDkB,EAAYC,KAAKpB,MAAMC,KAG3B,uBAAMH,UAAU,OAAOuB,SAAUD,KAAKJ,gBAAtC,UACE,sBAAKlB,UAAU,aAAf,UACE,uBACEwB,KAAK,OACLlB,KAAK,YACLmB,YAAY,YACZV,MAAK,UAAEO,KAAKpB,MAAMC,YAAb,aAAE,EAAiBI,UACxBmB,SAAUJ,KAAKX,mBAEjB,uBACEa,KAAK,OACLlB,KAAK,WACLmB,YAAY,WACZV,MAAK,UAAEO,KAAKpB,MAAMC,YAAb,aAAE,EAAiBK,SACxBkB,SAAUJ,KAAKX,sBAGnB,uBACEgB,UAAU,EACVH,KAAK,QACLlB,KAAK,QACLmB,YAAY,QACZV,MAAK,UAAEO,KAAKpB,MAAMC,YAAb,aAAE,EAAiBM,MACxBiB,SAAUJ,KAAKX,mBAEjB,cAAC,IAAD,CACEX,UAAU,iBACV4B,QAASN,KAAKpB,MAAM2B,kBAAX,UAA8BP,KAAKlB,MAAMC,YAAzC,aAA8B,EAAiByB,YAF1D,qBA3BF,qBAAK9B,UAAU,mBAAf,+CAoCF,OACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,IAAD,CAAaD,MAAM,UAAnB,SAA8BsB,U,GA/DTU,aAiFdC,uBAZS,SAAC9B,GACvB,MAAO,CACLG,KAAMH,EAAMG,SAIW,SAAC4B,GAC1B,MAAO,CACLb,kBAAmB,SAACjB,GAAD,OAAU8B,EAASb,4BAAkBjB,QAI7C6B,CAA6C/B","file":"static/js/3.a8fa8b31.chunk.js","sourcesContent":["import React from 'react';\n\nconst accountCard = ({ children, title }) => {\n  return (\n    <section className=\"account__card\">\n      <h4 className=\"heading-quaternary\">\n        {title}\n        <div className=\"heading-divider\"></div>\n      </h4>\n      <div className=\"account__card--body\">{children}</div>\n    </section>\n  );\n};\n\nexport default accountCard;\n","import React, { Component } from 'react';\nimport AccountCard from './card/card';\nimport Button from '../../components/UI/button';\nimport { connect } from 'react-redux';\nimport { updateUserProfile } from '../../../store/actions';\n\nclass AccountProfile extends Component {\n  state = {\n    user: this.props.auth.user || {\n      name: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n    },\n    showSpinner: false,\n  };\n\n  onChangedHandler = (e) => {\n    const { name: fieldName, value } = e.target;\n    const updateState = { ...this.state.user, [fieldName]: value };\n\n    this.setState({\n      user: updateState,\n    });\n  };\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n    this.props.updateUserProfile(this.state.user);\n  };\n  render() {\n    const cardBody = !this.state.user ? (\n      <div className=\"account__profile\">failed to fetch user profile. :-(</div>\n    ) : (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <div className=\"inputGroup\">\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"firstname\"\n            value={this.state.user?.firstname}\n            onChange={this.onChangedHandler}\n          />\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"lastname\"\n            value={this.state.user?.lastname}\n            onChange={this.onChangedHandler}\n          />\n        </div>\n        <input\n          disabled={true}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          value={this.state.user?.email}\n          onChange={this.onChangedHandler}\n        />\n        <Button\n          className=\"default btn-sm\"\n          loading={this.state.spinnerOnSubmit && this.props.auth?.isFetching}\n        >\n          save\n        </Button>\n      </form>\n    );\n\n    return (\n      <div className=\"account__profile\">\n        <AccountCard title=\"Profile\">{cardBody}</AccountCard>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserProfile: (user) => dispatch(updateUserProfile(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountProfile);\n"],"sourceRoot":""}