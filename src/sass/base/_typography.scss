body {
  font-family: 'sans-serif', Times, 'Times New Roman', serif;
  font-weight: 400;
  font-size: $default-font-size; /* font-size: 16px; */
  line-height: 1.9; /*1.7 times (70%) bigger that the default line-height*/
  letter-spacing: 2;
  color: $color-black;

  @include respond(phone) {
    //width < 600?
    line-height: 1;
  }
}

.heading-primary {
  font-size: 5.5rem;
  letter-spacing: 0.3rem;
  color: $color-grey-light-4;
  line-height: 1.2;
  user-select: none;

  // & + .paragraph {
  //   color: $color-secondary;
  // }

  @include respond(phone) {
    //width < 900?
    font-size: 4rem;
    margin-bottom: 1rem;

    & + .paragraph {
      line-height: 1.3;
      letter-spacing: 1.8;
    }
  }
}

.heading-secondary {
  // font-family: 'Papyrus';
  font-size: 4.2rem;
  font-weight: 100;
  margin-bottom: -1.2rem;

  @include respond(phone) {
    //width < 900?
    & .heading-divider {
      width: 10rem;
    }
  }
}

.heading-divider {
  border-bottom: 2px solid $color-primary;
  margin: 1rem 0 2rem 0;
  width: 18%;
  display: block;
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.heading-tertiary {
  font-size: 3.6rem;
  font-weight: 400;
}

.heading-quaternary {
  font-size: 2.1rem;
  font-weight: 600;
}

.paragraph {
  font-size: 1.8rem;
  font-weight: 100;
  line-height: 1.2;
  // letter-spacing: 2.5;
}

//Font Colors

.heading--color-primary {
  color: $color-primary-light;
}
.heading--color-secondary {
  color: $color-secondary;
}
.heading--color-tertiary {
  color: $color-tertiary;
}
.heading--color-tertiary-dark {
  color: rgba($color-tertiary-dark, 0.9);
}
.heading--color-white {
  color: $color-white;
}

.horizontal-ruler {
  border: 0.5px solid $color-primary-light;
}

// TRUNCATE TEXT

.truncate-overflow {
  --max-lines: 6;
  --lh: 2.5rem;
  line-height: var(--lh);
  position: relative;
  max-height: calc(var(--lh) * var(--max-lines));
  overflow: hidden;
  padding-right: 1rem; /* space for ellipsis */
}
.truncate-overflow::before {
  position: absolute;
  content: '...';
  /* tempting... but shows when lines == content */
  /* top: calc(var(--lh) * (var(--max-lines) - 1)); */

  /*
    inset-block-end: 0;
    inset-inline-end: 0;
    */
  bottom: 0;
  right: 0;
}
.truncate-overflow::after {
  content: '';
  position: absolute;
  /*
    inset-inline-end: 0;
    */
  right: 0;
  /* missing bottom on purpose*/
  width: 1rem;
  height: 1rem;
  // background: white;
}
